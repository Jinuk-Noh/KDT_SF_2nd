변수 : 데이터를 저장하는 공간
자료형 : 데이터 형식을 표시하는 키워드
조건문 : 특정 조건에 의해 실행되는 명령문
 - if : 특정 조건을 설정하고 그 조건에 맞으면 실행하게 하는 명령문
	- else if : if에서 조건을 만족하지 않고 새로운 조건을 추가 하고 싶을 때, 사용
	- else : if와 else if조건 전부 맞지 않을 때 실행 되는 구문
 - switch : case 문으로 나누어 변수가 일치하면 해당 case를 실행하는 조건문
 - 삼항 연산자 : 조건을 정의하고 참이면 참일경우를, 거짓이면 거짓을 실행하는 연산자
	ex) 조건 ? 참일 경우 실행 : 거짓일 경우 실행
반복문 : 같은 코드를 반복해서 실행하는 명령문
- for : 횟수를 정하여 코드를 반복할 때 사용 하는 반복문 초기값/조건값/증감값 존재
- while : 횟수를 정하지 않고 조건을 만족 하면 계속 실행하는 반복문
- do-while: 한번은 실행하고 조건이 충족되면 계속 실행 되는 반복문

함수 : 일부 작업을 수행하는 코드 블록
- 형태 
	- 반환값이 있는 경우/ 메소드명/ 매개변수가 없는 경우
	- 반환값이 있는 경우/ 메소드명/ 매개변수가 있는 경우	
	- 반환값이 없는 경우/ 메소드명/ 매개변수가 없는 경우
	- 반환값이 없는 경우/ 메소드명/ 매개변수가 있는 경우

배열
 - 일반 배열 : 한번에 여러 개의 값을 저장할 수 있는 변수(크기를 미리 지정해야함)
 - 포인터 : 변수의 주소를 저장하는 변수 자료형과 변수명 사이 *을 사용하여 표시 ex) int* 변수명 = &변수명;
 - 동적 배열 : 일반 배열에서 크기를 미리 지정해야하 사용할 수 있었지만 변수로 크기를 전달해 나중에 정할 수 있게 하는 배열
 - vector : 자동으로 메모리를 할당해주는 배열/ 크기가 고정되어 있지 않아 크기를 바꿀 수 있음

namespace : 변수나 함수 등의 소속(대표적인 namespace 'std'), 식별자를 구분하여 오류를 줄이기 위해 사용
사용법 namespace::변수/메소드 or 헤더 부분 using namespace 네임스페이스명 - 특정 요소만 제한해서 사용가능 ex) using namespace 네임스페이스명::변수명